<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PasswordPolicy</name>
    </assembly>
    <members>
        <member name="T:PasswordPolicy.Algorithm.AlgorithmManager">
            <summary>
            加密算法控制类
            </summary>
        </member>
        <member name="M:PasswordPolicy.Algorithm.AlgorithmManager.GetAlgorithm(PasswordPolicy.Algorithm.AlgorithmType)">
            <summary>
            根据类型取得加密类型实例
            </summary>
            <param name="at"></param>
            <returns></returns>
        </member>
        <member name="T:PasswordPolicy.Algorithm.AlgorithmType">
            <summary>
            加密类型
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.DES">
            <summary>
            对称加密
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.Tripl">
            <summary>
            三倍
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.RC2">
            <summary>
            资源定义
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.RC4">
            <summary>
            资源定义
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.CAST">
            <summary>
            Cast算法
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.Base64">
            <summary>
            字符串Base64算法
            </summary>
        </member>
        <member name="F:PasswordPolicy.Algorithm.AlgorithmType.MD5">
            <summary>
            单向的MD5加密
            </summary>
        </member>
        <member name="T:PasswordPolicy.Algorithm.Base64Algorithm">
            <summary>
            使用简单字符串Base64加密解密
            </summary>
        </member>
        <member name="T:PasswordPolicy.Algorithm.IAlgorithm">
            <summary>
            加解密算法接口
            </summary>
        </member>
        <member name="M:PasswordPolicy.Algorithm.IAlgorithm.EncryptTextToMemory(System.String)">
            <summary>
            加密内存中的字符数据，使用des默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.IAlgorithm.DecryptTextFromMemory(System.String)">
            <summary>
            解密内存中的字符串数据，使用des默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.Base64Algorithm.EncryptTextToMemory(System.String,System.Byte[],System.Byte[])">
            <summary>
            加密内存中的字符数据
            </summary>
            <param name="data">待加密数据</param>
            <param name="key">密钥</param>
            <param name="iv">初始化向量</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.Base64Algorithm.DecryptTextFromMemory(System.String,System.Byte[],System.Byte[])">
            <summary>
            解密内存中的数据
            </summary>
            <param name="data">待解密数据</param>
            <param name="key">密钥</param>
            <param name="iv">初始化向量</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.Base64Algorithm.EncryptTextToMemory(System.String)">
            <summary>
            加密内存中的字符数据，使用默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.Base64Algorithm.DecryptTextFromMemory(System.String)">
            <summary>
            解密内存中的字符串数据，使用默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:PasswordPolicy.Algorithm.DESAlgorithm">
            <summary>
            使用DES对称算法加解密
            </summary>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.EncryptTextToMemory(System.String,System.Byte[],System.Byte[])">
            <summary>
            加密内存中的字符数据
            </summary>
            <param name="data">待加密数据</param>
            <param name="key">密钥</param>
            <param name="iv">初始化向量</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.DecryptTextFromMemory(System.String,System.Byte[],System.Byte[])">
            <summary>
            解密内存中的数据
            </summary>
            <param name="data">待解密数据</param>
            <param name="key">密钥</param>
            <param name="iv">初始化向量</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.EncryptTextToMemory(System.String)">
            <summary>
            加密内存中的字符数据，使用默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.DecryptTextFromMemory(System.String)">
            <summary>
            解密内存中的字符串数据，使用默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.EncryptBytesToMemory(System.Byte[])">
            <summary>
            加密内存中的二进制数组，使用默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.DecryptBytesFromMemory(System.String)">
            <summary>
            解密内存中的二进制数组，使用默认key及iv
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.EncryptBytesToMemory(System.Byte[],System.Byte[],System.Byte[])">
            <summary>
            加密内存中的二进制数组
            </summary>
            <param name="data">待加密数据</param>
            <param name="key">密钥</param>
            <param name="iv">初始化向量</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.DecryptBytesFromMemory(System.String,System.Byte[],System.Byte[])">
            <summary>
            解密内存中的二进制数组
            </summary>
            <param name="data">待解密数据</param>
            <param name="key">密钥</param>
            <param name="iv">初始化向量</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.EncryptTextToMemory(System.String,System.String)">
            <summary>
            加密内存中的字符数据，使用默认key及iv
            如果传入的Key是NULL或者是空字符串，使用默认Key。
            如果是有值的就按照值到默认文件去拿Key。
            </summary>
            <param name="data"></param>
            <param name="keyVersion"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.DESAlgorithm.DecryptTextFromMemory(System.String,System.String)">
            <summary>
            解密内存中的字符串数据，使用默认key及iv
            如果传入的Key是NULL或者是空字符串，使用默认Key。
            如果是有值的就按照值到默认文件去拿Key。
            </summary>
            <param name="data"></param>
            <param name="keyVersion"></param>
            <returns></returns>
        </member>
        <member name="T:PasswordPolicy.Algorithm.MD5Algorithm">
            <summary>
            使用MD5算法加解密
            </summary>
        </member>
        <member name="M:PasswordPolicy.Algorithm.MD5Algorithm.EncryptTextToMemory(System.String)">
            <summary>
            加密内存中的字符数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.MD5Algorithm.DecryptTextFromMemory(System.String)">
            <summary>
            解密内存中的字符串数据
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Algorithm.MD5Algorithm.GetAddPass(System.String)">
            <summary>
            得到简单的一个打乱串
            </summary>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="T:PasswordPolicy.Users">
             <summary>
             用户表,用户ID作为分区字段,代表一个物理上存在的“人”
            abcd
             </summary>
        </member>
        <member name="M:PasswordPolicy.Users.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.UserID">
            <summary>
            用户ID，分区字段起始值1，步长10000
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.UserName">
            <summary>
            用户名称,“人”的昵称，可更改，全局唯一
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.Mobile">
            <summary>
            手机号，和CloudCustomer..Mobile同步，或许会废弃，用于在手机登录时，验证家长或者学生的手机号码
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.RealName">
            <summary>
            用户真实名称,“人“的真实姓名，可更改，可重复
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.CreateDate">
            <summary>
            用户建立时间
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.UpdateDate">
            <summary>
            用户更新时间
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.LastLoginDate">
            <summary>
            用户最后一次登录时间
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.LoginNumber">
            <summary>
            用户登录次数，应为所有Passport登录次数总和
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.FromSystem">
            <summary>
            用户从哪个子系统过来的
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.FromSysID">
            <summary>
            子系统的UserID
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.IsAllowModName">
            <summary>
            是否允许更改用户名0－否，1－是
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.UserState">
            <summary>
            用户登录状态，0－未登录，1－登录，2－休眠,-1-删除标记---------------------0-表示用户启用1-表示用户禁用
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.UserLanguage">
            <summary>
            用户语言
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.IsGuestUser">
            <summary>
            是否是Guest用户
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.StyleID">
            <summary>
            用户样式ID
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.GuestToRegisterID">
            <summary>
            记录Guest用户和注册用户的关系
            </summary>
        </member>
        <member name="P:PasswordPolicy.Users.NickName">
            <summary>
            用户昵称
            </summary>
        </member>
        <member name="T:PasswordPolicy.PasswordPolicyEntity">
            <summary>
            各个系统密码策略对象
            </summary>
        </member>
        <member name="M:PasswordPolicy.PasswordPolicyEntity.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordFromSystem">
            <summary>
            密码策略系统标示
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordRuleRegularExpressionDic">
            <summary>
            密码检查策略表达式字典
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.ExPasswordRuleRegularExpressionDic">
            <summary>
            密码检查策略扩展表达式字典
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordDesDic">
            <summary>
            密码DES的键值和版本
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordDesKeyFile">
            <summary>
            密码解密文本文件
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordDesKeyVerSion">
            <summary>
            密码DES加密版本
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordUnlockMinute">
            <summary>
            密码解锁时间（分钟）
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordFailedCount">
            <summary>
            登录密码输入错误失败的次数
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordLastMCount">
            <summary>
            密码最后修改记录的次数
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordMinMDayCount">
            <summary>
            密码最少修改天数
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordMixMDayCount">
            <summary>
            密码最多修改天数
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordPolicyEntity.PasswordIsSamePassportName">
            <summary>
            密码是否和用户名一致
            0-可以一致或者不检查
            1-要检查不能一致
            2-要检查用户Eamil是否也一致
            </summary>
        </member>
        <member name="T:PasswordPolicy.PasswordUtility">
            <summary>
            密码工具类
            </summary>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.GetInstance(System.String,System.String)">
            <summary>
            获取应用宿主实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.GetInstance">
            <summary>
            获取应用宿主实例
            </summary>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.#ctor(System.String,System.String)">
            <summary>
            构造函数
            </summary>
            <param name="fromSystem">系统标识</param>
            <param name="keyVersion">Key版本</param>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.CheckPasswordStrongPolicy(System.String)">
            <summary>
            检查密码强度是否符合指定的密码策略，
            fromSystem参数可以暂时仅仅保留，
            但逻辑上不做判断
            可以根据不同的系统采用不同强度策略
            具体的策略机制可以通过配置文件获取
            返回数字1、2、3级别越来越高（返回0是不都不符合）
            1.	密码字符个数：6～12个字符（修改版本最多20位）
            2.	允许使用的字符范围：英文字母、数字和可打印符号
            3.	安全级别：不安全－普通－安全
            a)	不安全：只使用了一类字符，即只有英文字母，或只有数字，或只有符号
            b)	普通：只使用了两类字符(添加了一种方式就是使用了三类字符但是长度不够8位的)
            c)	安全：使用了三类字符（增强了检查策略只有长度够8为位的三类字符才为强）
            d)  做一些排除规则字典（数字完全重复的、字母连续重复3的等返回0认为必须更改）
            </summary>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.CheckPasswordStrongPolicy(System.String,System.String,System.String)">
            <summary>
            检查密码强度是否符合指定的密码策略，
            fromSystem参数可以暂时仅仅保留，
            但逻辑上不做判断
            可以根据不同的系统采用不同强度策略
            具体的策略机制可以通过配置文件获取
            返回数字1、2、3级别越来越高（返回0是不都不符合）
            1.	密码字符个数：6～12个字符（修改版本最多20位）
            2.	允许使用的字符范围：英文字母、数字和可打印符号
            3.	安全级别：不安全－普通－安全
            a)	不安全：只使用了一类字符，即只有英文字母，或只有数字，或只有符号
            b)	普通：只使用了两类字符(添加了一种方式就是使用了三类字符但是长度不够8位的)
            c)	安全：使用了三类字符（增强了检查策略只有长度够8为位的三类字符才为强）
            d)  做一些排除规则字典（数字完全重复的、字母连续重复3的等返回0认为必须更改）
            </summary>
            <param name="passportname">用户名</param>
            <param name="password">密码</param>
            <param name="fromsystem">系统标示</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.CheckPasswordStrongPolicy(System.String,System.String,System.String,System.String)">
            <summary>
            检查密码强度是否符合指定的密码策略，
            fromSystem参数可以暂时仅仅保留，
            但逻辑上不做判断
            可以根据不同的系统采用不同强度策略
            具体的策略机制可以通过配置文件获取
            返回数字1、2、3级别越来越高（返回0是不都不符合）
            1.	密码字符个数：6～12个字符（修改版本最多20位）
            2.	允许使用的字符范围：英文字母、数字和可打印符号
            3.	安全级别：不安全－普通－安全
            a)	不安全：只使用了一类字符，即只有英文字母，或只有数字，或只有符号
            b)	普通：只使用了两类字符(添加了一种方式就是使用了三类字符但是长度不够8位的)
            c)	安全：使用了三类字符（增强了检查策略只有长度够8为位的三类字符才为强）
            d)  做一些排除规则字典（数字完全重复的、字母连续重复3的等返回0认为必须更改）
            </summary>
            <param name="passportname">用户名</param>
            <param name="password">密码</param>
            <param name="email">邮件地址</param>
            <param name="fromsystem">系统标示</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.CheckPasswordStrongPolicyByMy(System.String,System.String,System.String,PasswordPolicy.PasswordPolicyEntity)">
            <summary>
            检查密码强度是否符合指定的密码策略，
            fromSystem参数可以暂时仅仅保留，
            但逻辑上不做判断
            可以根据不同的系统采用不同强度策略
            具体的策略机制可以通过配置文件获取
            返回数字1、2、3级别越来越高（返回0是不都不符合）
            1.	密码字符个数：6～12个字符（修改版本最多20位）
            2.	允许使用的字符范围：英文字母、数字和可打印符号
            3.	安全级别：不安全－普通－安全
            a)	不安全：只使用了一类字符，即只有英文字母，或只有数字，或只有符号
            b)	普通：只使用了两类字符(添加了一种方式就是使用了三类字符但是长度不够8位的)
            c)	安全：使用了三类字符（增强了检查策略只有长度够8为位的三类字符才为强）
            d)  做一些排除规则字典（数字完全重复的、字母连续重复3的等返回0认为必须更改）
            </summary>
            <param name="passportname">用户名</param>
            <param name="password">密码</param>
            <param name="email">用户邮件</param>
            <param name="fromsystem">系统标示</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.GetPasswordPolicyEntityByFromsystem(System.String)">
            <summary>
            根据系统标示获取密码策略对象
            </summary>
            <param name="fromsystem">系统标示</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.HashPassword(System.String,System.String)">
            <summary>
            Hash密码，用户名作为混杂参数
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.EncryptPasswordByDES(System.String,System.String)">
            <summary>
            加密用户密码，用户名作为混杂参数
            第三和第四个方法所需要的Key，可以要求在AppSettings节内配置Key文件的路径
            </summary>
            <param name="username">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.UnEncryptPasswordByDES(System.String,System.String)">
            <summary>
            解密用户密码，用户名作为混杂参数
            第三和第四个方法所需要的Key，可以要求在AppSettings节内配置Key文件的路径
            </summary>
            <param name="encryptPasswordText">要解密的密码</param>
            <param name="userName">用户名</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.EncryptPasswordByDES(System.String,System.String,System.String)">
            <summary>
            加密用户密码，用户名作为混杂参数
            第三和第四个方法所需要的Key，可以要求在AppSettings节内配置Key文件的路径
            配置版本也可以从文件读取或者是配置节上读取
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <param name="keyVersion">密码Key的版本号</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.UnEncryptPasswordByDES(System.String,System.String,System.String)">
            <summary>
            解密用户密码，用户名作为混杂参数
            第三和第四个方法所需要的Key，可以要求在AppSettings节内配置Key文件的路径
            配置版本也可以从文件读取或者是配置节上读取
            </summary>
            <param name="encryptPasswordText">要解密的密码</param>
            <param name="userName">用户名</param>
            <param name="keyVersion">密码Key的版本号</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.UnOldEncryptPasswordByDES(System.String,System.String)">
            <summary>
            解密用户密码，用户名作为混杂参数
            第三和第四个方法所需要的Key，可以要求在AppSettings节内配置Key文件的路径
            配置版本也可以从文件读取或者是配置节上读取
            </summary>
            <param name="encryptPasswordText">要解密的密码</param>
            <param name="userName">用户名</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.GetOldUserName(System.String,System.String)">
            <summary>
            取得老系统用户名去掉后缀的
            </summary>
            <param name="inputName">输入用户名</param>
            <param name="fromsystem">系统标示</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.PasswordUtility.Init(System.String,System.String)">
            <summary>
            初始化
            </summary>
            <param name="fromSystem">标识</param>
            <param name="keyVersion">密码版本</param>
        </member>
        <member name="P:PasswordPolicy.PasswordUtility.KeyVersion">
            <summary>
            DES加密版本号
            </summary>
        </member>
        <member name="P:PasswordPolicy.PasswordUtility.PassworPolicyDic">
            <summary>
            返回密码策略实体字典
            </summary>
        </member>
        <member name="T:PasswordPolicy.Util.EncryptionUtility">
            <summary>
            DEC 64位加密
            </summary>
        </member>
        <member name="M:PasswordPolicy.Util.EncryptionUtility.EncryptMemID(System.String)">
            <summary>
            加密 默认密钥:myehrkey
                密钥为Web.config中配置的。[CookieMemIdSecretKey]
            </summary>
            <param name="memID"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.EncryptionUtility.DecryptMemID(System.String)">
            <summary>
            解密 默认密钥:myehrkey
                密钥为Web.config中配置的。[CookieMemIdSecretKey]
            </summary>
            <param name="memID"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.EncryptionUtility.EncryptString(System.String,System.String)">
            <summary>
            DEC 加密过程  64位加密
            </summary>
            <param name="pToEncrypt"></param>
            <param name="sKey">8字符</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.EncryptionUtility.DecryptString(System.String,System.String)">
            <summary>
            DEC 解密过程  64位加密
            </summary>
            <param name="pToDecrypt"></param>
            <param name="sKey">8字符</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.EncryptionUtility.GetDECKeys(System.String)">
            <summary>
            获取dec的加密密钥 8位 不够的用0补充到8位 超过的只取8位
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="T:PasswordPolicy.Util.PasswordConfiguration">
            <summary>
            系统配置类
            </summary>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordConfiguration.#ctor">
            <summary>
            静态构造函数
            </summary>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordConfiguration.Instance">
            <summary>
            取得配置类的实例
            </summary>
            <returns></returns>
        </member>
        <member name="P:PasswordPolicy.Util.PasswordConfiguration.PasswordPolicyFileName">
            <summary>
            取得整体密码加密策略的文件如果没有，
            个默认的文件存在
            </summary>
        </member>
        <member name="T:PasswordPolicy.Util.PasswordPolicyUtility">
            <summary>
            读取密码策略文件类
            </summary>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetPasswordPolicyXml(System.String,System.String)">
            <summary>
            返回配置节设定内容
            </summary>
            <param name="xmlFileName">文件名字</param>
            <param name="fromSystem">系统配置节控制</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetPasswordPolicyXmlAll(System.String)">
            <summary>
            返回配置节设定内容
            </summary>
            <param name="xmlFileName">文件名字</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetPasswordPolicyStr(System.String,System.String)">
            <summary>
            取得调整策略后的字符串
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetUnPasswordPolicyStr(System.String,System.String)">
            <summary>
            取得反调整策略后的字符串
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetPasswordPolicyAndStr(System.String,System.String)">
            <summary>
            取得调整策略后的字符串
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetUnPasswordPolicyAndStr(System.String,System.String)">
            <summary>
            取得反调整策略后的字符串
            </summary>
            <param name="userName">用户名</param>
            <param name="password">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetPasswordKeyFileKeyIv(System.String,System.String)">
            <summary>
            根据文件名字和KeyVersion取得文件记录的密码保存Key
            </summary>
            <param name="fileName"></param>
            <param name="keyVersion"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.IsFormatValidate(System.String,System.String)">
            <summary>
            自定义正则表达式验证
            </summary>
            <param name="valueStr"></param>
            <param name="validationExpression"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetEncryptPassword(System.String)">
            <summary>
            取得加密字符串(防止乱码)
            </summary>
            <param name="strValue"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.IsAllSameCharInStr(System.String)">
            <summary>
            判断输入字符串是否都是
            </summary>
            <param name="passwordStr"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.IsSpecialCharInStr(System.String)">
            <summary>
            判断输入字符串是否有排除的特殊字符
            </summary>
            <param name="passwordStr">密码</param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.AddKeyIvToDic(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            将从文件里取得的Key加入到字典里
            </summary>
            <param name="fileName">文件夹名</param>
            <param name="keyVersion">Key版本</param>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.GetNodeAttributesValue(System.Xml.XmlNode,System.String)">
            <summary>
            取节点值
            </summary>
            <param name="node"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:PasswordPolicy.Util.PasswordPolicyUtility.SetDicByNodesName(System.Xml.XmlNode,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            根据节点名称设置字典
            </summary>
            <param name="fromNode"></param>
            <param name="passwordPolicyD"></param>
            <param name="nodesName"></param>
        </member>
        <member name="T:PasswordPolicy.Util.PasswordPolicyConstWord">
            <summary>
            常量定义
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.FromSystem">
            <summary>
            系统节点名
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordDesKeyFile">
            <summary>
            密码Des加密Key保存文件名
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordRuleRegularExpression">
            <summary>
            密码强度表达式
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.ExPasswordRuleRegularExpression">
            <summary>
            一些例外的密码强度表达式
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.ValueStr">
            <summary>
            变量名
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordDesKeyVerSion">
            <summary>
            DesKey版本
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordDesKey">
            <summary>
            DesKey
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordDesKeyIv">
            <summary>
            DesKeyIv
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordPolicy">
            <summary>
            密码策略
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordPolicyFileName">
            <summary>
            密码策略文件名
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.DefaultStr">
            <summary>
            default字符串
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.ZeroStr">
            <summary>
            Zero字符串
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PolicyConfigRFilePath">
            <summary>
            密码策略文件路径（嵌入资源）
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PolicyKeyRFilePath">
            <summary>
            密码策略Key文件路径（嵌入资源）
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordUnlockMinute">
            <summary>
            解锁时间
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordFailedCount">
            <summary>
            登录失败次数
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordLastMCount">
            <summary>
            密码最后登录次数
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordMinMDayCount">
            <summary>
            密码最少修改时间
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordMixMDayCount">
            <summary>
            密码最大修改时间
            </summary>
        </member>
        <member name="F:PasswordPolicy.Util.PasswordPolicyConstWord.PasswordIsSamePassportName">
            <summary>
            密码是否和用户名重名
            </summary>
        </member>
    </members>
</doc>
